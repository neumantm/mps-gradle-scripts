/*
  This is an example file, which demonstrates how the gradle helper scripts can be used
 */

ext.mpsVersion = "2021.2.4"

// here add your required plugins
// to find a plugin entry, search in https://plugins.jetbrains.com/ for the plugin name and obtain the ID from URL (e.g. 13242 for grammarcells)
// if you need a specific version for a plugin, add it in []-brackets
ext.mpsPlugins = [ "de.itemis.mps.extensions.build": 17136,
                   "de.itemis.mps.grammarcells": 13242,
                   "LangDoc[2021.2]": 12325,
                   "mps-table-editor-component[2021.2]": 13255 ]

apply from: 'gradle/download-mps.gradle'
apply from: 'gradle/run-mps-ant.gradle'

task prepareMps {
    group 'mps'
    dependsOn buildOsSpecificBundle
}

task mpsBuild {
    group 'mps'
    dependsOn 'mpsAntGenerate', 'mpsAntBuild'
}

task mpsClean {
    group 'mps'
    dependsOn 'mpsAntCleanSources'
}

task mpsTest {
    group 'mps'
    dependsOn 'mpsAntCheck', 'parseTestReportAfterAntCheck'
}

task openProjectInMps {
    group 'mps'
    dependsOn openProjectInMpsForCurrentOs
}

task buildAndOpenProjectInMps {
    group 'mps'
    dependsOn mpsBuild, openProjectInMps
}

task downloadGradleScripts {
    group 'mps'

    doLast {
        ["download-mps.gradle", "run-mps-ant.gradle"].each {
            def gradleScriptFile = file("$projectDir/gradle/$it")
            gradleScriptFile.parentFile.mkdirs()
            def url = new URL("https://github.com/vimotest/mps-gradle-scripts/raw/main/gradle/$it")
            url.withInputStream {
                inputStream -> gradleScriptFile.withOutputStream { outputStream -> outputStream << inputStream }
            }
            gradleScriptFile.text = "/* This file is downloaded from $url */\n\n${gradleScriptFile.text}"
        }
    }
}
